name: CI
on:
  push:
    branches: [ main, develop, release/*, hotfix/* ]
  pull_request:
    branches: [ main, develop, release/*, hotfix/* ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
jobs:
  run-selected-unittests:
    runs-on: windows-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    name: Run MSBuild and VSTest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        id: checkout_code
            
      - name: install SQLite ODBC
        id: install_sqlite_odbc
        shell: cmd
        run: |
          cd sqliteODBC64
          .\SQLiteODBCInstaller.exe -q -i -d=sql3

      - name: install DuckDB ODBC
        id: install_duckdb_odbc
        shell: cmd
        run: |
          cd duckdbODBC64
          .\odbc_install.exe //CI //Install

      - name: Setup MSBuild and add to PATH
        uses: microsoft/setup-msbuild@v2
        id: setup_msbuild
              
      - name: Run MSBuild
        id: run_msbuild
        run: |
          msbuild .\csharp_DotNet8_ODBC.sln  /t:clean,build -restore /p:Configuration=Release

      - name: Run with sqlite3
        id: run_sqlite_executable
        shell: powershell
        run: |
          .\bin\Release\net8.0\csharp_DotNet8_ODBC.exe sqlite .\db .\db\test.sqlite3 .\sql\sqlite3\datetime.sql .\data
          if ($LASTEXITCODE) { exit $LASTEXITCODE }

      - name: Run with duckdb
        id: run_duckdb_executable
        shell: powershell
        run: |
          .\bin\Release\net8.0\csharp_DotNet8_ODBC.exe duckdb .\db .\db\test.duckdb .\sql\sqlite3\datetime.sql .\data
          if ($LASTEXITCODE) { exit $LASTEXITCODE }
